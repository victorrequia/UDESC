import math

n1 = [(0, 0.1610544498487837), (-0.16035864564022537, 0.15896884339395434), (0.16035864564022537, 0.15896884339395434), (-0.31656409996362983, 0.15276604206585967), (0.31656409996362983, 0.15276604206585967), (-0.46457074137596094, 0.1426067021736066), (0.46457074137596094, 0.1426067021736066), (-0.600545304661681, 0.12875396253933621), (0.600545304661681, 0.12875396253933621), (-0.7209661773352294, 0.11156664554733399), (0.7209661773352294, 0.11156664554733399), (-0.8227146565371428, 0.09149002162245), (0.8227146565371428, 0.09149002162245), (-0.9031559036148179, 0.06904454273764123), (0.9031559036148179, 0.06904454273764123), (-0.96020815213483, 0.0448142267656996), (0.96020815213483, 0.0448142267656996), (-0.9924068438435844, 0.019461788229726478), (0.9924068438435844, 0.019461788229726478)]

print('{x:<20}{c:<20}'.format(x='x_k', c='c_k'))
for x_k, c_k in n1:
    print('{x:<20}{c:<20}'.format(x=x_k, c=c_k))

# se for -1 a 1 usamos a forma f(x) direto
def f(x):
    return math.sin(math.exp(-pow(x,2))) + 1

def quadratura(f, pontos_e_pesos):
    soma = 0
    for x_k, c_k in pontos_e_pesos:
        soma += c_k * f(x_k)
    return soma

# se for distancia diferente de -1 e 1 
def change(f, a, b, u):
    return f((b+a)/2 + (b-a)*u/2) * (b-a)/2

a,b = [-1.9918, 1.91514]
def g(u):
    return change(f, a, b, u)

r = quadratura(g, n1)

print(r)